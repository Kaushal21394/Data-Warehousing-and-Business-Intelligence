<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Balanced Group' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25000'>
        <calculation class='tableau' formula='25000' />
        <range granularity='5000' max='25000' min='10000' />
      </column>
      <column caption='Balanced Age' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='15' min='5' />
      </column>
    </datasource>
    <datasource caption='UK-Bank-Customers' inline='true' name='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='UK-Bank-Customers' name='textscan.1e3l8tq1wf37541gmz8na0muq92r'>
            <connection class='textscan' directory='F:/Courses/Tableau' filename='UK-Bank-Customers.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1e3l8tq1wf37541gmz8na0muq92r' name='UK-Bank-Customers.csv' table='[UK-Bank-Customers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Customer ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Surname' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='integer' name='Age' ordinal='4' />
            <column datatype='string' name='Region' ordinal='5' />
            <column datatype='string' name='Job Classification' ordinal='6' />
            <column datatype='string' name='Date Joined' ordinal='7' />
            <column datatype='real' name='Balance' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Surname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Surname]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Surname</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Classification</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Job Classification]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Job Classification</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Joined</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date Joined]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Date Joined</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Balance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Balance]</local-name>
            <parent-name>[UK-Bank-Customers.csv]</parent-name>
            <remote-alias>Balance</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Balance (bin)' datatype='integer' name='[Balance (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Balance]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='real' name='[Balance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <group caption='Action (Age (bin))' hidden='true' name='[Action (Age (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (Balance (bin))' hidden='true' name='[Action (Balance (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Balance (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.535854' measure-ordering='alphabetic' measure-percentage='0.409387' parameter-percentage='0.0547588' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Balanced Group' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25000'>
          <calculation class='tableau' formula='25000' />
          <range granularity='5000' max='25000' min='10000' />
        </column>
        <column caption='Balanced Age' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='5' max='15' min='5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customer Segmentation Dashboard' type='sheet' worksheet='Age Distribution' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customer Segmentation Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customer Segmentation Dashboard' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customer Segmentation Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customer Segmentation Dashboard' type='sheet' worksheet='Balance Distribution' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customer Segmentation Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customer Segmentation Dashboard' type='sheet' worksheet='TreeMap' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customer Segmentation Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customer Segmentation Dashboard' type='sheet' worksheet='Pie Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customer Segmentation Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Age Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='UK-Bank-Customers' name='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Balanced Group' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25000'>
              <calculation class='tableau' formula='25000' />
              <range granularity='5000' max='25000' min='10000' />
            </column>
            <column caption='Balanced Age' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='15' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Balance (bin)' datatype='integer' name='[Balance (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Balance]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[Balance]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]'>
            <groupfilter function='level-members' level='[Balance (bin)]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]'>
            <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' scope='rows' value='% of Customers' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Age (bin):ok]' value='54' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='281' />
                <format attr='maxheight' value='281' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]</rows>
        <cols>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Age (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Age (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Balance Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='UK-Bank-Customers' name='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Balanced Group' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25000'>
              <calculation class='tableau' formula='25000' />
              <range granularity='5000' max='25000' min='10000' />
            </column>
            <column caption='Balanced Age' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='15' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Balance (bin)' datatype='integer' name='[Balance (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Balance]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[Balance]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Balance (bin)]' derivation='None' name='[none:Balance (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Balance]' derivation='Sum' name='[pcto:sum:Balance:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]'>
            <groupfilter function='level-members' level='[Age (bin)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]'>
            <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' scope='rows' value='% of Distribution' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Balance (bin):ok]' value='46' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Balance:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='332' />
                <format attr='maxheight' value='332' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]</rows>
        <cols>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Balance (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Balance (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='UK-Bank-Customers' name='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Balanced Group' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25000'>
              <calculation class='tableau' formula='25000' />
              <range granularity='5000' max='25000' min='10000' />
            </column>
            <column caption='Balanced Age' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='15' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Balance (bin)' datatype='integer' name='[Balance (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Balance]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[Balance]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]'>
            <groupfilter function='level-members' level='[Age (bin)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]'>
            <groupfilter function='level-members' level='[Balance (bin)]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]'>
            <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Longitude (generated)]' field-type='quantitative' max='443633.99416134064' min='-1236303.454883907' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Latitude (generated)]' field-type='quantitative' max='8729660.9123903885' min='6168579.8013459183' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[sum:Number of Records:qk]' value='11' />
            <format attr='font-weight' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[sum:Number of Records:qk]' value='bold' />
            <format attr='font-weight' data-class='subtotal' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[sum:Number of Records:qk]' value='normal' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
            <format attr='border-width' value='3' />
            <format attr='color' value='#000000' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Region:nk]' />
              <text column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[sum:Number of Records:qk]' />
              <lod column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Region:nk]' />
              <geometry column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='264' />
                <format attr='maxwidth' value='264' />
                <format attr='minheight' value='403' />
                <format attr='maxheight' value='403' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Latitude (generated)]</rows>
        <cols>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='UK-Bank-Customers' name='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Balanced Group' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25000'>
              <calculation class='tableau' formula='25000' />
              <range granularity='5000' max='25000' min='10000' />
            </column>
            <column caption='Balanced Age' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='15' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Balance (bin)' datatype='integer' name='[Balance (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Balance]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[Balance]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]'>
            <groupfilter function='level-members' level='[Age (bin)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]'>
            <groupfilter function='level-members' level='[Balance (bin)]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='204' />
            <format attr='height' value='243' />
            <format attr='text-format' field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Gender:nk]' />
              <wedge-size column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[sum:Number of Records:qk]' />
              <text column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Gender:nk]' />
              <text column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3073480129241943' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='TreeMap'>
      <table>
        <view>
          <datasources>
            <datasource caption='UK-Bank-Customers' name='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Balanced Group' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25000'>
              <calculation class='tableau' formula='25000' />
              <range granularity='5000' max='25000' min='10000' />
            </column>
            <column caption='Balanced Age' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='15' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pn0wuh0vv1b7g16j8dma1pd6tm3'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Balance (bin)' datatype='integer' name='[Balance (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Balance]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[Balance]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Classification]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Job Classification]' derivation='None' name='[none:Job Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]'>
            <groupfilter function='level-members' level='[Age (bin)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]'>
            <groupfilter function='level-members' level='[Balance (bin)]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]'>
            <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Region)]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Balance (bin))]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Age (bin))]</column>
            <column>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='269' />
            <format attr='width' value='255' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Job Classification:nk]' />
              <size column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' />
              <text column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Job Classification:nk]' />
              <text column='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Customer Segmentation Dashboard'>
      <style>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='center' />
          <format attr='font-size' value='12' />
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='74200' x='800' y='1000'>
              <zone h='57500' id='1' name='Map' w='27644' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='57500' id='9' name='Age Distribution' w='46556' x='28444' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40500' id='12' name='Balance Distribution' w='47800' x='27200' y='58500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='488' h='40500' id='15' is-fixed='true' name='TreeMap' w='26400' x='800' y='58500'>
                <layout-cache fixed-size-w='385' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='242' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='24200' x='75000' y='1000'>
              <zone fixed-size='155' h='20375' id='6' is-fixed='true' name='Map' pane-specification-id='0' param='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Region:nk]' type='color' w='24200' x='75000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='151' h='19875' id='11' is-fixed='true' mode='slider' param='[Parameters].[Parameter 2]' type='paramctrl' w='24200' x='75000' y='21375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='151' h='19875' id='14' is-fixed='true' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='24200' x='75000' y='41250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='411' h='37875' id='7' is-fixed='true' name='Pie Chart' w='24200' x='75000' y='61125'>
                <layout-cache fixed-size-w='204' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Age Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Age (bin):ok]</field>
            <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Balance Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Balance:qk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Balance (bin):ok]</field>
            <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Balance:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TreeMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Job Classification:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Job Classification:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Customer Segmentation Dashboard' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Age Distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Balance Distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Pie Chart'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Gender:nk]</field>
                    <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[sum:Number of Records:qk]</field>
                    <field>[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[pcto:sum:Number of Records:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Male&quot;</value>
                  <value>2165</value>
                  <value>0.53936223218734425</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='TreeMap'>
          <highlight field='[federated.1pn0wuh0vv1b7g16j8dma1pd6tm3].[none:Job Classification:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Balance Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Segmentation Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      sfSJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
      GwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TreeMap' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
